#![allow(warnings)]

/* automatically generated by rust-bindgen 0.59.1 */

pub const PATOH_CONPART: u32 = 1;
pub const PATOH_CUTPART: u32 = 2;
pub const PATOH_SUGPARAM_DEFAULT: u32 = 0;
pub const PATOH_SUGPARAM_SPEED: u32 = 1;
pub const PATOH_SUGPARAM_QUALITY: u32 = 2;
pub const PATOH_BALANCE_STRICT: u32 = 0;
pub const PATOH_BALANCE_ADAPTIVE: u32 = 1;
pub const PATOH_BALANCE_RELAXED: u32 = 2;
pub const PATOH_VO_CONT: u32 = 0;
pub const PATOH_VO_RAND: u32 = 1;
pub const PATOH_VO_SCD: u32 = 2;
pub const PATOH_VO_SMAXNS: u32 = 3;
pub const PATOH_VO_SMINNS: u32 = 4;
pub const PATOH_VO_SMINNSSUM: u32 = 5;
pub const PATOH_VO_SWEEP: u32 = 6;
pub const PATOH_CRS_FF: u32 = 0;
pub const PATOH_CRS_HCM: u32 = 1;
pub const PATOH_CRS_PHCM: u32 = 2;
pub const PATOH_CRS_MANDIS: u32 = 3;
pub const PATOH_CRS_AVGDIS: u32 = 4;
pub const PATOH_CRS_CANBERA: u32 = 5;
pub const PATOH_CRS_ABS: u32 = 6;
pub const PATOH_CRS_GCM: u32 = 7;
pub const PATOH_CRS_SHCM: u32 = 8;
pub const PATOH_CRS_HCC: u32 = 9;
pub const PATOH_CRS_HPC: u32 = 10;
pub const PATOH_CRS_ABSHCC: u32 = 11;
pub const PATOH_CRS_ABSHPC: u32 = 12;
pub const PATOH_CRS_CONC: u32 = 13;
pub const PATOH_CRS_GCC: u32 = 14;
pub const PATOH_CRS_SHCC: u32 = 15;
pub const PATOH_CRS_FIRST_NET_MATCH: u32 = 16;
pub const PATOH_CRS_NC: u32 = 16;
pub const PATOH_CRS_MNC: u32 = 17;
pub const PATOH_IPA_GHGP: u32 = 1;
pub const PATOH_IPA_AGGMATCH: u32 = 2;
pub const PATOH_IPA_BF: u32 = 3;
pub const PATOH_IPA_BINPACK: u32 = 4;
pub const PATOH_IPA_RANDOM1: u32 = 5;
pub const PATOH_IPA_RANDOM2: u32 = 6;
pub const PATOH_IPA_RANDOM3: u32 = 7;
pub const PATOH_IPA_GHG_MAXPIN: u32 = 8;
pub const PATOH_IPA_GHG_MAXNET: u32 = 9;
pub const PATOH_IPA_GHG_MAXPOSGAIN: u32 = 10;
pub const PATOH_IPA_COMP_GHGP: u32 = 11;
pub const PATOH_IPA_GREEDY_COMP_GHGP: u32 = 12;
pub const PATOH_IPA_ALL: u32 = 13;
pub const PATOH_REFALG_NONE: u32 = 0;
pub const PATOH_REFALG_T_BFM: u32 = 1;
pub const PATOH_REFALG_T_FM: u32 = 2;
pub const PATOH_REFALG_D_BFM: u32 = 3;
pub const PATOH_REFALG_D_FM: u32 = 4;
pub const PATOH_REFALG_BKL: u32 = 5;
pub const PATOH_REFALG_KL: u32 = 6;
pub const PATOH_REFALG_MLG_BFM: u32 = 7;
pub const PATOH_REFALG_MLG_FM: u32 = 8;
pub const PATOH_REFALG_BFMKL: u32 = 9;
pub const PATOH_REFALG_FMKL: u32 = 10;
pub const PATOH_OD_ONLYRESTIME: i32 = -1;
pub const PATOH_OD_NONE: u32 = 0;
pub const PATOH_OD_LOW: u32 = 1;
pub const PATOH_OD_MEDIUM: u32 = 2;
pub const PATOH_OD_HIGH: u32 = 3;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PaToH_Parameters {
    pub cuttype: ::std::os::raw::c_int,
    pub _k: ::std::os::raw::c_int,
    pub outputdetail: ::std::os::raw::c_int,
    pub seed: ::std::os::raw::c_int,
    pub doinitperm: ::std::os::raw::c_int,
    pub bisec_fixednetsizetrsh: ::std::os::raw::c_int,
    pub bisec_netsizetrsh: f32,
    pub bisec_partmultnetsizetrsh: ::std::os::raw::c_int,
    pub bigVcycle: ::std::os::raw::c_int,
    pub smallVcycle: ::std::os::raw::c_int,
    pub usesamematchinginVcycles: ::std::os::raw::c_int,
    pub usebucket: ::std::os::raw::c_int,
    pub maxcellinheap: ::std::os::raw::c_int,
    pub heapchk_mul: ::std::os::raw::c_int,
    pub heapchk_div: ::std::os::raw::c_int,
    pub MemMul_CellNet: ::std::os::raw::c_int,
    pub MemMul_Pins: ::std::os::raw::c_int,
    pub MemMul_General: ::std::os::raw::c_int,
    pub crs_VisitOrder: ::std::os::raw::c_int,
    pub crs_alg: ::std::os::raw::c_int,
    pub crs_coarsento: ::std::os::raw::c_int,
    pub crs_coarsentokmult: ::std::os::raw::c_int,
    pub crs_coarsenper: ::std::os::raw::c_int,
    pub crs_maxallowedcellwmult: f32,
    pub crs_idenafter: ::std::os::raw::c_int,
    pub crs_iden_netsizetrh: ::std::os::raw::c_int,
    pub crs_useafter: ::std::os::raw::c_int,
    pub crs_useafteralg: ::std::os::raw::c_int,
    pub nofinstances: ::std::os::raw::c_int,
    pub initp_alg: ::std::os::raw::c_int,
    pub initp_runno: ::std::os::raw::c_int,
    pub initp_ghg_trybalance: ::std::os::raw::c_int,
    pub initp_refalg: ::std::os::raw::c_int,
    pub ref_alg: ::std::os::raw::c_int,
    pub ref_useafter: ::std::os::raw::c_int,
    pub ref_useafteralg: ::std::os::raw::c_int,
    pub ref_passcnt: ::std::os::raw::c_int,
    pub ref_maxnegmove: ::std::os::raw::c_int,
    pub ref_maxnegmovemult: f32,
    pub ref_dynamiclockcnt: ::std::os::raw::c_int,
    pub ref_slow_uncoarsening: f32,
    pub balance: ::std::os::raw::c_int,
    pub init_imbal: f64,
    pub final_imbal: f64,
    pub fast_initbal_mult: f64,
    pub init_sol_discard_mult: f32,
    pub final_sol_discard_mult: f32,
    pub allargs: [::std::os::raw::c_char; 8192usize],
    pub inputfilename: [::std::os::raw::c_char; 512usize],
    pub noofrun: ::std::os::raw::c_int,
    pub writepartinfo: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_PaToH_Parameters() {
    assert_eq!(
        ::std::mem::size_of::<PaToH_Parameters>(),
        8912usize,
        concat!("Size of: ", stringify!(PaToH_Parameters))
    );
    assert_eq!(
        ::std::mem::align_of::<PaToH_Parameters>(),
        8usize,
        concat!("Alignment of ", stringify!(PaToH_Parameters))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).cuttype as *const _ as usize },
        0usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(cuttype)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>()))._k as *const _ as usize },
        4usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(_k)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).outputdetail as *const _ as usize },
        8usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(outputdetail)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).seed as *const _ as usize },
        12usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(seed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).doinitperm as *const _ as usize },
        16usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(doinitperm)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).bisec_fixednetsizetrsh as *const _ as usize
        },
        20usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(bisec_fixednetsizetrsh)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).bisec_netsizetrsh as *const _ as usize
        },
        24usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(bisec_netsizetrsh)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).bisec_partmultnetsizetrsh as *const _
                as usize
        },
        28usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(bisec_partmultnetsizetrsh)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).bigVcycle as *const _ as usize },
        32usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(bigVcycle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).smallVcycle as *const _ as usize },
        36usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(smallVcycle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).usesamematchinginVcycles as *const _
                as usize
        },
        40usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(usesamematchinginVcycles)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).usebucket as *const _ as usize },
        44usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(usebucket)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).maxcellinheap as *const _ as usize },
        48usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(maxcellinheap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).heapchk_mul as *const _ as usize },
        52usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(heapchk_mul)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).heapchk_div as *const _ as usize },
        56usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(heapchk_div)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).MemMul_CellNet as *const _ as usize },
        60usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(MemMul_CellNet)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).MemMul_Pins as *const _ as usize },
        64usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(MemMul_Pins)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).MemMul_General as *const _ as usize },
        68usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(MemMul_General)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_VisitOrder as *const _ as usize },
        72usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_VisitOrder)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_alg as *const _ as usize },
        76usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_alg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_coarsento as *const _ as usize },
        80usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_coarsento)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).crs_coarsentokmult as *const _ as usize
        },
        84usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_coarsentokmult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_coarsenper as *const _ as usize },
        88usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_coarsenper)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).crs_maxallowedcellwmult as *const _
                as usize
        },
        92usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_maxallowedcellwmult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_idenafter as *const _ as usize },
        96usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_idenafter)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).crs_iden_netsizetrh as *const _ as usize
        },
        100usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_iden_netsizetrh)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).crs_useafter as *const _ as usize },
        104usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_useafter)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).crs_useafteralg as *const _ as usize
        },
        108usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(crs_useafteralg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).nofinstances as *const _ as usize },
        112usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(nofinstances)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).initp_alg as *const _ as usize },
        116usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(initp_alg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).initp_runno as *const _ as usize },
        120usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(initp_runno)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).initp_ghg_trybalance as *const _ as usize
        },
        124usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(initp_ghg_trybalance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).initp_refalg as *const _ as usize },
        128usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(initp_refalg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).ref_alg as *const _ as usize },
        132usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_alg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).ref_useafter as *const _ as usize },
        136usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_useafter)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).ref_useafteralg as *const _ as usize
        },
        140usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_useafteralg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).ref_passcnt as *const _ as usize },
        144usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_passcnt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).ref_maxnegmove as *const _ as usize },
        148usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_maxnegmove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).ref_maxnegmovemult as *const _ as usize
        },
        152usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_maxnegmovemult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).ref_dynamiclockcnt as *const _ as usize
        },
        156usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_dynamiclockcnt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).ref_slow_uncoarsening as *const _ as usize
        },
        160usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(ref_slow_uncoarsening)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).balance as *const _ as usize },
        164usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(balance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).init_imbal as *const _ as usize },
        168usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(init_imbal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).final_imbal as *const _ as usize },
        176usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(final_imbal)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).fast_initbal_mult as *const _ as usize
        },
        184usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(fast_initbal_mult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).init_sol_discard_mult as *const _ as usize
        },
        192usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(init_sol_discard_mult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<PaToH_Parameters>())).final_sol_discard_mult as *const _ as usize
        },
        196usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(final_sol_discard_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).allargs as *const _ as usize },
        200usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(allargs)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).inputfilename as *const _ as usize },
        8392usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(inputfilename)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).noofrun as *const _ as usize },
        8904usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(noofrun)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PaToH_Parameters>())).writepartinfo as *const _ as usize },
        8908usize,
        concat!(
        "Offset of field: ",
        stringify!(PaToH_Parameters),
        "::",
        stringify!(writepartinfo)
        )
    );
}
pub type PPaToH_Parameters = *mut PaToH_Parameters;
extern "C" {
    pub fn PaToH_Initialize_Parameters(
        pargs: PPaToH_Parameters,
        cuttype: ::std::os::raw::c_int,
        SuggestByProblemType: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
pub type SingleArgumentCallBack = ::std::option::Option<
    unsafe extern "C" fn(
        pargs: PPaToH_Parameters,
        variable: *mut ::std::os::raw::c_char,
        value: *mut ::std::os::raw::c_char,
        ivalue: ::std::os::raw::c_int,
        fvalue: f32,
    ) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub fn PaToH_Process_Arguments(
        pargs: PPaToH_Parameters,
        startargc: ::std::os::raw::c_int,
        argc: ::std::os::raw::c_int,
        argv: *mut *mut ::std::os::raw::c_char,
        func: SingleArgumentCallBack,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Alloc(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Free() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Partition(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
        cut: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Partition_with_FixCells(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
        cut: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_MultiConst_Partition(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
        cut: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Part(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        useFixCells: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        targetweights: *mut f32,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
        cut: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Refine_Bisec(
        pargs: PPaToH_Parameters,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
        cut: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_VersionStr() -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn PaToH_Print_Parameter_Abrv() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Print_Parameters(p: PPaToH_Parameters);
}
extern "C" {
    pub fn PaToH_Check_User_Parameters(
        pargs: PPaToH_Parameters,
        verbose: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Read_Hypergraph(
        filename: *mut ::std::os::raw::c_char,
        _c: *mut ::std::os::raw::c_int,
        _n: *mut ::std::os::raw::c_int,
        _nconst: *mut ::std::os::raw::c_int,
        cwghts: *mut *mut ::std::os::raw::c_int,
        nwghts: *mut *mut ::std::os::raw::c_int,
        xpins: *mut *mut ::std::os::raw::c_int,
        pins: *mut *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Write_Hypergraph(
        filename: *mut ::std::os::raw::c_char,
        numbering: ::std::os::raw::c_int,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Check_Hypergraph(
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Compute_Cut(
        _k: ::std::os::raw::c_int,
        cuttype: ::std::os::raw::c_int,
        _c: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Compute_Part_Weights(
        _k: ::std::os::raw::c_int,
        _c: ::std::os::raw::c_int,
        _nconst: ::std::os::raw::c_int,
        cwghts: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partweights: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn PaToH_Compute_Part_NetWeights(
        _k: ::std::os::raw::c_int,
        _n: ::std::os::raw::c_int,
        nwghts: *mut ::std::os::raw::c_int,
        xpins: *mut ::std::os::raw::c_int,
        pins: *mut ::std::os::raw::c_int,
        partvec: *mut ::std::os::raw::c_int,
        partinweights: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
